openapi: 3.0.0
servers: []
info:
  version: "1.0.0"
  title: API assignment



paths:
  /interview:
      get:
        summary: gets all interview
        tags:
          - project manager
          - sourcer
          - technical interviewer
          - management interviewer
        responses:
          200:
            description: OK
            content:
              application/json:
                schema:
                   $ref: '#/components/schemas/Interview'
          401:
             description: Authorization information is missing or invalid.
      
      post:
        tags:
          - sourcer
        summary: adds a new interview with possible timeslots
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Interview'
        responses:
         201:
            description: interview created
            content:
              application/json:
                schema:
                   $ref: '#/components/schemas/Interview'
         400:
            description: invalid input, object invalid
         401:
             description: Authorization information is missing or invalid.
      put:
        tags: 
          - technical interviewer
          - management interviewer
          - sourcer
        summary: updates an interview, assign final date and interviewer OR fill documentation after an interview
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Interview'
        responses:
           200:
             description: OK
           400:
             description: Bad request. 
           401:
             description: Authorization information is missing or invalid.
           404:
             description: An interview with the specified ID was not found.
             
  /interview/{candidateId}:
      get:
        parameters:
        - name: candidateId
          in: path
          required: true
          description: Id of the candidate
          schema:
            format: uuid
            type: string
        summary: fetches an interview connected to a candidate
        tags:
          - project manager
          - sourcer
          - technical interviewer
          - management interviewer
        responses:
          200:
            description: OK
          400:
            description: Invalid ID supplied
          401:
             description: Authorization information is missing or invalid.
          404:
            description: Interview not found
            
  /candidate:
      get:
        summary: gets all candidate
        tags:
          - project manager
          - sourcer
          - recruiter
        responses:
          200:
            description: OK
          401:
             description: Authorization information is missing or invalid.
      post:
        summary: adds a new candidate
        tags:
          - sourcer
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Candidate'
            image/png:
              schema:
                type: string
                format: binary
        responses:
            201:
              description: candidate created
              content:
                application/json:
                 schema: 
                   $ref: '#/components/schemas/Candidate'
            400:
              description: invalid input, object invalid
            401:
               description: Authorization information is missing or invalid.
               
  /candidate/approve/{candidateId}:
      post:
        parameters:
           - name: candidateId
             in: path
             required: true
             description: Id of the candidate
             schema:
               format: uuid
               type: string
        summary: approves a candidate for further process
        tags: 
           - recruiter
           - project manager
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Candidate'
        responses:
           200:
             description: OK
           400:
             description: Bad request. 
           401:
             description: Authorization information is missing or invalid.
           404:
             description: A candidate with the specified ID was not found.
             
  /project:
      get:
        tags:
          - admin
          - project manager
        summary: fetches all projects.
        responses:
          200:
            description: successful operation
      post:
        summary: adds a new project
        tags:
          - admin
          - project manager
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Project'
        responses:
         201:
            description: project created
         400:
            description: invalid input, object invalid
         401:
             description: Authorization information is missing or invalid.
             
  /position:
      get:
        tags:
          - recruiter
          - sourcer
        summary: fetches all positions.
        responses:
          200:
            description: successful operation
      post:
        tags:
          - recruiter
        summary: adds a new position
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Position'
        responses:
         201:
            description: position created
         400:
            description: invalid input, object invalid
         401:
            description: Authorization information is missing or invalid.
         409:
            description: position already exists    
      put:
        tags: 
          - recruiter
        summary: updates a position
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Position'
        responses:
           200:
             description: OK
           400:
             description: Bad request. 
           401:
             description: Authorization information is missing or invalid.
           404:
             description: A position with the specified ID was not found.
             
  /position/{positionId}:
      get:
        summary: fetches a position
        parameters:
          - name: positionId
            in: path
            required: true
            description: Id of the position
            schema:
              format: uuid
              type: string
        tags:
          - project manager
          - sourcer
          - technical interviewer
          - management interviewer
        responses:
          200:
            description: OK
            content:
              application/json:
                 schema:
                   $ref: '#/components/schemas/Position'
          400:
            description: Invalid ID supplied
          401:
             description: Authorization information is missing or invalid.
          404:
            description: Position not found
      delete:
            tags:
              - recruiter
            parameters:
              - name: positionId
                in: path
                description: ID of position that needs to be deleted
                required: true
                schema:
                  type: string
                  format: uuid
            summary: deletes a position
            responses:
              400:
                description: Invalid ID supplied
              401:
                description: Authorization information is missing or invalid.
              404:
                description: Position not found
                
  /role:
     put:
        tags: 
          - admin
        summary: updates a role
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/Role'
        responses:
           200:
             description: OK
           400:
             description: Bad request. 
           401:
             description: Authorization information is missing or invalid.
           404:
             description: A role with the specified ID was not found.
     post:
        tags:
          - admins
        summary: adds a new role
        responses:
         201:
            description: role created
         400:
            description: invalid input, object invalid
         401:
            description: Authorization information is missing or invalid.
         409:
            description: role already exists
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Role'
                
  /role/{roleId}:
      delete:
            tags:
              - admin
            parameters:
              - name: roleId
                in: path
                description: ID of role that needs to be deleted
                required: true
                schema:
                  type: string
                  format: uuid
            summary: deletes a role
            responses:
              400:
                description: Invalid ID supplied
              401:
                description: Authorization information is missing or invalid.
              404:
                description: Role not found
  /user:
      put:
        tags: 
          - admins
        summary: updates a user
        requestBody:
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/User'
        responses:
           200:
             description: OK
           400:
             description: Bad request. 
           401:
             description: Authorization information is missing or invalid.
           404:
             description: A user with the specified ID was not found.
                
      post:
        tags:
          - admins
        summary: adds a new user
        responses:
         201:
            description: user created
         400:
            description: invalid input, object invalid
         401:
            description: Authorization information is missing or invalid.
         409:
            description: user already exists
        requestBody:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
                
  /user/{userId}:
    delete:
        tags:
          - admin
        parameters:
          - name: userId
            in: path
            description: ID of user that needs to be deleted
            required: true
            schema:
              type: string
              format: uuid
        summary: deletes a user
        responses:
          400:
            description: Invalid ID supplied
          401:
             description: Authorization information is missing or invalid.
          404:
            description: User not found
      
components:
  schemas:
    Project:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        role:
          $ref: '#/components/schemas/Role'

    Candidate:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        email:
          type: string
        experience:
          type: string
        relevantPosition:
          type: string
          format: uuid
    
    Interview:
      type: object
      properties:
        id:
          type: string
          format: uuid
        interviewerId:
          type: string
          format: uuid
        candidateId:
          type: string
          format: uuid
        type:
          type: string
          enum: ["technical", "management"]
        possibleTimeslots:
          type: array
          items:
            type: string
            format: date
        finalTimeslot:
          type: string
          format: date
    Role:
      type: object
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
          
    Position:
      type: object
      properties:
        id:
          type: string
          format: uuid
        description:
          type: string
        name:
          type: string
