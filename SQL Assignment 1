CREATE TABLE Employer
(
	Employer_ID INTEGER,
	FullName TEXT,
	JoiningDate DATE,
	CurrentPosition TEXT,
	Department TEXT,
	AssignedProject TEXT
)

----------------------------------------------------------

CREATE TABLE Services(
	Software_ID INTEGER,
	Name TEXT,
	Category TEXT,
	Size INTEGER,
	NumberOfInstallment INTEGER
)

----------------------------------------------------------

CREATE TABLE Software_Requests
(
	Employer_ID INTEGER,
	Software_ID INTEGER,
	Request_Start_Date DATE,
	Request_Close_Date DATE,
	Status TEXT
)

----------------------------------------------------------

create or replace function installment_increase()
	returns trigger
	language plpgsql
as $$
begin	

	update services
	set numberofinstallment = numberofinstallment + 1
	where new.software_id = software_id;
	
	return new;
end;
$$

create or replace trigger request_insert_trigger
	before insert
	on software_requests
	for each row
	execute procedure installment_increase();

----------------------------------------------------------

create or replace procedure set_request_invalid(_employer_id int, _software_id int)
language plpgsql
as $$
begin
	update software_requests 
	set status='invalid'
	where employer_id = _employer_id and software_id = _software_id;


	update services as s
	set numberofinstallment = numberofinstallment - 1
	where s.software_id = _software_id;
end;
$$

----------------------------------------------------------

INSERT INTO Services
VALUES
(
	1,
	'Lakoma',
	'A',
	'1205',
	'0'
),
(
	2,
	'Jokora',
	'C',
	'653',
	'0'
);
INSERT INTO Employer
VALUES
(
	12345,
	'John Doe',
	'2020-10-19',
	'Developer',
	'Software and Data',
	'Morgan Stanley'
	
),
(
	54321,
	'Sarah Hamle',
	'2000-03-19',
	'Assistant',
	'HR',
	'Talent program'
	
);
INSERT INTO Software_Requests
VALUES
(
	12345,
	1,
	'2002-01-11',
	'2002-03-11',
	'Closed'
),
(
	12345,
	2,
	'2022-06-11',
	null,
	'Ongoing'
);



